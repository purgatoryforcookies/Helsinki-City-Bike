name: validation_front

on:
  push:
    branches: [master]
    paths:
      - front/**
  pull_request:
    branches: [master]
    paths:
      - front/**

env:
  FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}

jobs:
  test:
    # if: github.ref == 'refs/heads/master'
    name: Front unit test
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./front

    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
      
      - name: Intall dependecies
        run: npm install

      - name: Test
        run: npm test

      
  
  deploy:
    needs: test
    name: Build app
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./front
    
    steps:

      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
      
      - name: Intall dependecies
        run: npm install

      - name: Build
        run: npm run build

      - name: Deploy to SolDevServerEU
        uses: easingthemes/ssh-deploy@main
        env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH }}
            REMOTE_HOST: ${{ secrets.EC2_DOMAIN }}
            REMOTE_USER: ${{ secrets.EC2_USERNAME }}
            SOURCE: "front/build"
            TARGET: "/home/ubuntu/soldev/nginx/"

      - name: Restart container in EC2 with SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_SSH }}
          host: ${{ secrets.EC2_DOMAIN }}
          username: ${{ secrets.EC2_USERNAME }}
          envs: POSTGRE_HOST, POSTGRE_PASS, POSTRGE_PASS
          script: |
            set -e
            export POSTGRE_HOST=${{ secrets.POSTGRE_HOST }}
            export POSTGRE_USER=soldev2023
            export POSTGRE_PASS=${{ secrets.POSTGRE_PASS }}
            cd /home/ubuntu/soldev
            sudo -E docker-compose -f docker-compose.prod.yml down
            sudo -E docker-compose -f docker-compose.prod.yml build
            sudo -E docker-compose -f docker-compose.prod.yml up
            exit
            
      - name: Exit
        if: always()
        run: exit
