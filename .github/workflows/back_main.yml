name: validation_back

on:
  push:
    branches: [master]
    paths:
      - back/**
  pull_request:
    branches: [master]
    paths:
      - back/**


jobs:
  test:
    # if: github.ref == 'refs/heads/master'
    name: Server test
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./back
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Build containers
        run: docker-compose -f docker-compose.test.yml build

      - name: Run tests
        run: docker-compose -f docker-compose.test.yml up --exit-code-from app


  deploy:
      # if: github.ref == 'refs/heads/master'
      name: Deploy to AWS EC2
      env:
          POSTGRE_HOST: ${{ secrets.POSTGRE_HOST }}
          POSTGRE_USER: ${{ secrets.POSTGRE_USER }}
          POSTGRE_PASS: ${{ secrets.POSTGRE_PASS }}
      needs: test
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        
        - name: Deploy SolDevServerEU
          uses: easingthemes/ssh-deploy@main
          env:
              SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH }}
              REMOTE_HOST: ${{ secrets.EC2_DOMAIN }}
              REMOTE_USER: ${{ secrets.EC2_USERNAME }}
              SOURCE: "back/"
              TARGET: "/home/ubuntu/soldev"

        - name: Run container in EC2 with SSH
          uses: appleboy/ssh-action@master
          with:
            key: ${{ secrets.EC2_SSH }}
            host: ${{ secrets.EC2_DOMAIN }}
            username: ${{ secrets.EC2_USERNAME }}
            envs: POSTGRE_HOST, POSTGRE_PASS, POSTRGE_PASS
            script: |
              set -e
              export POSTGRE_HOST=${{ secrets.POSTGRE_HOST }}
              export POSTGRE_USER=soldev2023
              export POSTGRE_PASS=${{ secrets.POSTGRE_PASS }}
              printenv
              cd /home/ubuntu/soldev
              sudo -E docker-compose -f docker-compose.prod.yml down
              sudo -E docker-compose -f docker-compose.prod.yml build
              sudo -E docker-compose -f docker-compose.prod.yml up
              exit
        
        - name: Exit
          if: always()
          run: exit



        